/*!
 * Bootstrap v5.3.0 (https://getbootstrap.com/)
 * Copyright 2011-2023 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).bootstrap=e()}(this,(function(){"use strict";
const t=new Map,e={set(e,i,n){t.has(e)||t.set(e,new Map);const s=t.get(e);s.has(i)||0===s.size?s.set(i,n):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(s.keys())[0]}.`)},get:(e,i)=>t.has(e)&&t.get(e).get(i)||null,remove(e,i){if(!t.has(e))return;const n=t.get(e);n.delete(i),0===n.size&&t.delete(e)}};
const i="transitionend",n=t=>(t&&window.CSS&&window.CSS.escape&&(t=t.replace(/#([^\s"#']+)/g,((t,e)=>`#${CSS.escape(e)}`))),t),s=t=>{t.dispatchEvent(new Event(i))};
const o=(t,e="hide")=>{const i=`click.dismiss${t.EVENT_KEY}`,n=t.NAME;Event.one(document,i,`[data-bs-dismiss="${n}"]`,(function(i){if(["A","AREA"].includes(this.tagName)&&i.preventDefault(),l(this))return;const s=r(this)||this.closest(`.${n}`);t.getOrCreateInstance(s)[e]()}))},r=t=>{const e=t.getAttribute("data-bs-target");if(!e||"#"===e){let i=t.getAttribute("href");if(!i||!i.includes("#")&&!i.startsWith("."))return null;i.includes("#")&&!i.startsWith("#")&&(i=`#${i.split("#")[1]}`),e=i&&"#"!==i?i:null}return n(e)},a=t=>{const e=r(t);return e&&document.querySelector(e)?e:null},l=t=>t.disabled||t.hasAttribute("disabled"),c=t=>{if(!t||t.getClientRects().length)return!1;const e=getComputedStyle(t).getPropertyValue("visibility");return"hidden"===e||"collapse"===e},h=(t,e,i)=>{const n=t.indexOf(e);if(-1===n)return t[!i&&0===n?t.length-1:0];const s=t.length;return t[(n+(i?1:-1)+s)%s]},d=()=>"rtl"===document.documentElement.dir,u=t=>{let e;return e="string"==typeof t?document.querySelector(n(t)):t,e},f=(t,e)=>{t.forEach((t=>{const i=t.otherNode;e===i&&t.disconnect()}))},p=t=>{if("true"===t)return!0;if("false"===t)return!1;if(t===Number(t).toString())return Number(t);if(""===t||"null"===t)return null;if("string"!=typeof t)return t;try{return JSON.parse(decodeURIComponent(t))}catch(e){return t}},m=(t,e)=>{return t.replace(/[A-Z]/g,(t=>`-${t.toLowerCase()}`))},g=t=>{const e={};return Object.keys(t).forEach((i=>{const n=t[i],s=i.replace(/^bs/,"").replace(/[A-Z]/g,(t=>`-${t.toLowerCase()}`));e[s]=p(n)})),e},_=()=>{const{jQuery:t}=window;return t&&!document.body.hasAttribute("data-bs-no-jquery")?t:null},b=[],v=()=>"loading"===document.readyState,y=t=>{v()?b.push(t):t()},w=()=>{const t=_();if(t){const e=t.fn.emulateTransitionEnd;t.fn.emulateTransitionEnd=function(t){return console.warn("The `emulateTransitionEnd` method has been deprecated and will be removed in v6."),e.call(this,t)}}},A=()=>{const t=_();t&&(w(),t(document).trigger("ready.bs.bootstrap"))},E=(t,e=[],i=t)=>"function"==typeof t?t(...e):i,T=(t,e,n=!0)=>{if(!n)return void E(t);const o=(t=>{if(!t)return 0;let{transitionDuration:e,transitionDelay:i}=window.getComputedStyle(t);const n=Number.parseFloat(e),s=Number.parseFloat(i);return n||s?(e=e.split(",")[0],i=i.split(",")[0],1e3*(Number.parseFloat(e)+Number.parseFloat(i))):0})(e)+5;let r=!1;const a=({target:n})=>{n===e&&(r=!0,e.removeEventListener(i,a),E(t))};e.addEventListener(i,a),setTimeout((()=>{r||s(e)}),o)},C=(t,e,i,n)=>{const s=t.indexOf(e);if(-1===s)return t[!i&&0===s?t.length-1:0];const o=t.length;return t[(s+(i?1:-1)+o)%o]},O=".bs.dropdown",x=new RegExp("ArrowUp|ArrowDown|Escape"),D="click.bs.dropdown.data-api",S="keydown.bs.dropdown.data-api",L="show",I="shown",N="hide",P="hidden",k="click",M="keydown",j="keyup",F="[data-bs-toggle=dropdown]:not(.disabled):not(:disabled)",$="[data-bs-toggle=dropdown][aria-expanded=true]",W='.dropdown-menu',z=d()?"top-end":"top-start",R=d()?"top-start":"top-end",q=d()?"bottom-end":"bottom-start",V=d()?"bottom-start":"bottom-end",K=d()?"left-start":"right-start",Q=d()?"right-start":"left-start",X={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},Y={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};
class U extends B{static get Default(){return X}static get DefaultType(){return Y}static get NAME(){return"dropdown"}constructor(t,e){super(t,e),this._popper=null,this._parent=this._element.parentNode,this._menu=Z.next(this._element,W)[0]||Z.prev(this._element,W)[0]||Z.findOne(W,this._parent),this._inNavbar=this._detectNavbar()}toggle(){return this._isShown()?this.hide():this.show()}show(){if(l(this._element)||this._isShown())return;const t={relatedTarget:this._element};if(!H.trigger(this._element,L,t).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(".navbar-nav"))for(const t of[].concat(...document.body.children))H.on(t,"mouseover",u);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(I),this._element.classList.add(I),H.trigger(this._element,I,t)}}hide(){if(l(this._element)||!this._isShown())return;const t={relatedTarget:this._element};this._completeHide(t)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(t){if(!H.trigger(this._element,N,t).defaultPrevented){if("ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))H.off(t,"mouseover",u);this._popper&&this._popper.destroy(),this._menu.classList.remove(I),this._element.classList.remove(I),this._element.setAttribute("aria-expanded","false"),J.removeDataAttribute(this._menu,"popper"),H.trigger(this._element,P,t)}}_getConfig(t){if("object"==typeof(t=super._getConfig(t)).reference&&!c(t.reference)&&"function"!=typeof t.reference.getBoundingClientRect)throw new TypeError(`${"dropdown".toUpperCase()}: Option "reference" provided type "object" without a valid "getBoundingClientRect" method.`);return t}_createPopper(){if(void 0===i)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let t=this._element;"parent"===this._config.reference?t=this._parent:c(this._config.reference)?t=u(this._config.reference):"object"==typeof this._config.reference&&(t=this._config.reference);const e=this._getPopperConfig();this._popper=i.createPopper(t,this._menu,e)}_isShown(){return this._menu.classList.contains(I)}_getPlacement(){const t=this._parent;if(t.classList.contains("dropend"))return K;if(t.classList.contains("dropstart"))return Q;if(t.classList.contains("dropup-center"))return"top";if(t.classList.contains("dropdown-center"))return"bottom";const e="end"===getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();return t.classList.contains("dropup")?e?R:z:e?V:q}_detectNavbar(){return null!==this._element.closest(".navbar")}_getOffset(){const{offset:t}=this._config;return"string"==typeof t?t.split(",").map((t=>Number.parseInt(t,10))):"function"==typeof t?e=>t(e,this._element):t}_getPopperConfig(){const t={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||"static"===this._config.display)&&(J.setDataAttribute(this._menu,"popper","static"),t.modifiers=[{name:"applyStyles",enabled:!1}]),{...t,...E(this._config.popperConfig,[t])}}_selectMenuItem({key:t,target:e}){const i=Z.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",this._menu).filter((t=>c(t)));i.length&&C(i,e,"ArrowDown"===t,!i.includes(e)).focus()}static jQueryInterface(t){return this.each((function(){const e=U.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}static clearMenus(t){if(2===t.button||"keyup"===t.type&&"Tab"!==t.key)return;const e=Z.find($);for(const i of e){const e=U.getInstance(i);if(!e||!1===e._config.autoClose)continue;const n=t.composedPath(),s=n.includes(e._menu);if(n.includes(e._element)||"inside"===e._config.autoClose&&!s||"outside"===e._config.autoClose&&s||e._menu.contains(t.target)&&("keyup"===t.type&&"Tab"===t.key||/input|select|option|textarea|form/i.test(t.target.tagName)))continue;const o={relatedTarget:e._element};"click"===t.type&&(o.clickEvent=t),e._completeHide(o)}}static dataApiKeydownHandler(t){const e=/input|textarea/i.test(t.target.tagName),i="Escape"===t.key,n=["ArrowUp","ArrowDown"].includes(t.key),s=n||i;if(!s||e&&!i)return;t.preventDefault();const o=this.matches(F)?this:Z.prev(this,F)[0]||Z.next(this,F)[0]||Z.findOne(F,t.delegateTarget),r=U.getOrCreateInstance(o);if(n)return t.stopPropagation(),r.show(),void r._selectMenuItem(t);r._isShown()&&(t.stopPropagation(),r.hide(),o.focus())}}H.on(document,S,F,U.dataApiKeydownHandler),H.on(document,S,W,U.dataApiKeydownHandler),H.on(document,D,U.clearMenus),H.on(window,"load",U.clearMenus),H.on(document,D,F,(function(t){t.preventDefault(),U.getOrCreateInstance(this).toggle()})),_(U);

// Additional Bootstrap components for SynerGen-AI
class Modal {
  constructor(element, options = {}) {
    this._element = element;
    this._config = { ...options };
    this._isShown = false;
    this._backdrop = null;
    this._init();
  }
  
  _init() {
    this._element.addEventListener('click', (e) => {
      if (e.target === this._element) {
        this.hide();
      }
    });
  }
  
  show() {
    if (this._isShown) return;
    
    this._isShown = true;
    this._element.style.display = 'block';
    this._element.classList.add('show');
    document.body.classList.add('modal-open');
    
    this._showBackdrop();
  }
  
  hide() {
    if (!this._isShown) return;
    
    this._isShown = false;
    this._element.classList.remove('show');
    
    setTimeout(() => {
      this._element.style.display = 'none';
      document.body.classList.remove('modal-open');
      this._hideBackdrop();
    }, 150);
  }
  
  _showBackdrop() {
    if (!this._backdrop) {
      this._backdrop = document.createElement('div');
      this._backdrop.className = 'modal-backdrop fade';
      document.body.appendChild(this._backdrop);
    }
    
    setTimeout(() => {
      this._backdrop.classList.add('show');
    }, 10);
  }
  
  _hideBackdrop() {
    if (this._backdrop) {
      this._backdrop.classList.remove('show');
      setTimeout(() => {
        if (this._backdrop) {
          document.body.removeChild(this._backdrop);
          this._backdrop = null;
        }
      }, 150);
    }
  }
  
  static getInstance(element) {
    return element._modalInstance || null;
  }
  
  static getOrCreateInstance(element, config) {
    return element._modalInstance || new Modal(element, config);
  }
}

// Collapse component
class Collapse {
  constructor(element, options = {}) {
    this._element = element;
    this._config = { ...options };
    this._isTransitioning = false;
    this._init();
  }
  
  _init() {
    // Initialize collapse functionality
  }
  
  show() {
    if (this._isTransitioning || this._element.classList.contains('show')) return;
    
    this._isTransitioning = true;
    this._element.style.height = '0px';
    this._element.classList.add('collapsing');
    this._element.classList.remove('collapse');
    
    const complete = () => {
      this._element.classList.remove('collapsing');
      this._element.classList.add('collapse', 'show');
      this._element.style.height = '';
      this._isTransitioning = false;
    };
    
    this._element.style.height = this._element.scrollHeight + 'px';
    setTimeout(complete, 350);
  }
  
  hide() {
    if (this._isTransitioning || !this._element.classList.contains('show')) return;
    
    this._isTransitioning = true;
    this._element.style.height = this._element.getBoundingClientRect().height + 'px';
    this._element.classList.add('collapsing');
    this._element.classList.remove('collapse', 'show');
    
    const complete = () => {
      this._element.classList.remove('collapsing');
      this._element.classList.add('collapse');
      this._element.style.height = '';
      this._isTransitioning = false;
    };
    
    setTimeout(() => {
      this._element.style.height = '0px';
    }, 10);
    
    setTimeout(complete, 350);
  }
  
  toggle() {
    if (this._element.classList.contains('show')) {
      this.hide();
    } else {
      this.show();
    }
  }
  
  static getInstance(element) {
    return element._collapseInstance || null;
  }
  
  static getOrCreateInstance(element, config) {
    return element._collapseInstance || new Collapse(element, config);
  }
}

// Tab component
class Tab {
  constructor(element) {
    this._element = element;
    this._init();
  }
  
  _init() {
    this._element.addEventListener('click', (e) => {
      e.preventDefault();
      this.show();
    });
  }
  
  show() {
    if (this._element.classList.contains('active')) return;
    
    const target = this._element.getAttribute('data-bs-target') || this._element.getAttribute('href');
    const targetElement = document.querySelector(target);
    
    if (!targetElement) return;
    
    // Hide all other tabs in the same group
    const tabList = this._element.closest('[role="tablist"]');
    if (tabList) {
      const allTabs = tabList.querySelectorAll('[data-bs-toggle="tab"]');
      const allPanes = document.querySelectorAll('.tab-pane');
      
      allTabs.forEach(tab => {
        tab.classList.remove('active');
        tab.setAttribute('aria-selected', 'false');
      });
      
      allPanes.forEach(pane => {
        pane.classList.remove('show', 'active');
      });
    }
    
    // Show current tab
    this._element.classList.add('active');
    this._element.setAttribute('aria-selected', 'true');
    targetElement.classList.add('show', 'active');
  }
  
  static getInstance(element) {
    return element._tabInstance || null;
  }
  
  static getOrCreateInstance(element) {
    return element._tabInstance || new Tab(element);
  }
}

// Initialize components
document.addEventListener('DOMContentLoaded', () => {
  // Initialize modals
  document.querySelectorAll('[data-bs-toggle="modal"]').forEach(trigger => {
    trigger.addEventListener('click', (e) => {
      e.preventDefault();
      const target = trigger.getAttribute('data-bs-target');
      const modal = document.querySelector(target);
      if (modal) {
        Modal.getOrCreateInstance(modal).show();
      }
    });
  });
  
  // Initialize collapse
  document.querySelectorAll('[data-bs-toggle="collapse"]').forEach(trigger => {
    trigger.addEventListener('click', (e) => {
      e.preventDefault();
      const target = trigger.getAttribute('data-bs-target');
      const collapse = document.querySelector(target);
      if (collapse) {
        Collapse.getOrCreateInstance(collapse).toggle();
      }
    });
  });
  
  // Initialize tabs
  document.querySelectorAll('[data-bs-toggle="tab"]').forEach(tab => {
    Tab.getOrCreateInstance(tab);
  });
  
  // Close modal on backdrop click
  document.querySelectorAll('.modal').forEach(modal => {
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        Modal.getOrCreateInstance(modal).hide();
      }
    });
  });
  
  // Close modal on close button click
  document.querySelectorAll('[data-bs-dismiss="modal"]').forEach(closeBtn => {
    closeBtn.addEventListener('click', () => {
      const modal = closeBtn.closest('.modal');
      if (modal) {
        Modal.getOrCreateInstance(modal).hide();
      }
    });
  });
});

// Export for global use
window.bootstrap = {
  Modal,
  Collapse,
  Tab,
  Dropdown: U
};

return {Modal, Collapse, Tab, Dropdown: U};
}));