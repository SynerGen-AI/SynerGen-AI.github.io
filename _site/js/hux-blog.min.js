/*!
 * Hux Blog Theme JavaScript
 * Adapted for SynerGen-AI
 */

// Main theme functionality
(function($) {
  'use strict';
  
  // Smooth scrolling for anchor links
  $('a[href*="#"]:not([href="#"])').click(function() {
    if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') && location.hostname == this.hostname) {
      var target = $(this.hash);
      target = target.length ? target : $('[name=' + this.hash.slice(1) +']');
      if (target.length) {
        $('html, body').animate({
          scrollTop: target.offset().top - 70
        }, 1000);
        return false;
      }
    }
  });
  
  // Navbar scroll effect
  $(window).scroll(function() {
    var scrollTop = $(this).scrollTop();
    var navbar = $('.navbar-custom');
    
    if (scrollTop > 50) {
      navbar.addClass('is-fixed');
    } else {
      navbar.removeClass('is-fixed');
    }
  });
  
  // Mobile menu toggle
  $('.navbar-toggle').click(function() {
    $('.navbar-collapse').toggleClass('in');
  });
  
  // Close mobile menu when clicking outside
  $(document).click(function(e) {
    if (!$(e.target).closest('.navbar').length) {
      $('.navbar-collapse').removeClass('in');
    }
  });
  
  // Language switcher
  $('.language-switch').click(function(e) {
    e.preventDefault();
    var currentLang = $(this).data('lang');
    var currentPath = window.location.pathname;
    var newPath;
    
    if (currentLang === 'en') {
      // Switch to Chinese
      if (currentPath.endsWith('-cn.html') || currentPath.endsWith('-cn/')) {
        newPath = currentPath;
      } else {
        newPath = currentPath.replace(/\.html$/, '-cn.html').replace(/\/$/, '-cn/');
      }
    } else {
      // Switch to English
      newPath = currentPath.replace(/-cn\.html$/, '.html').replace(/-cn\/$/, '/');
    }
    
    // Check if the target page exists, otherwise go to home
    var testLink = $('<a>').attr('href', newPath)[0];
    if (testLink.hostname === window.location.hostname) {
      window.location.href = newPath;
    } else {
      window.location.href = currentLang === 'en' ? '/cn/' : '/';
    }
  });
  
  // Search functionality
  $('.search-toggle').click(function() {
    $('.search-form').toggleClass('active');
    $('.search-input').focus();
  });
  
  $('.search-input').on('keyup', function(e) {
    if (e.keyCode === 27) { // Escape key
      $('.search-form').removeClass('active');
    }
  });
  
  // Tag cloud hover effect
  $('.tag-cloud .tag').hover(
    function() {
      $(this).addClass('tag-hover');
    },
    function() {
      $(this).removeClass('tag-hover');
    }
  );
  
  // Back to top button
  var backToTop = $('<div class="back-to-top"><i class="fa fa-chevron-up"></i></div>');
  $('body').append(backToTop);
  
  $(window).scroll(function() {
    if ($(this).scrollTop() > 300) {
      backToTop.fadeIn();
    } else {
      backToTop.fadeOut();
    }
  });
  
  backToTop.click(function() {
    $('html, body').animate({scrollTop: 0}, 600);
  });
  
  // Image lazy loading
  if ('IntersectionObserver' in window) {
    var imageObserver = new IntersectionObserver(function(entries, observer) {
      entries.forEach(function(entry) {
        if (entry.isIntersecting) {
          var img = entry.target;
          img.src = img.dataset.src;
          img.classList.remove('lazy');
          imageObserver.unobserve(img);
        }
      });
    });
    
    document.querySelectorAll('img[data-src]').forEach(function(img) {
      imageObserver.observe(img);
    });
  }
  
  // Copy to clipboard functionality
  $('.copy-btn').click(function() {
    var text = $(this).data('clipboard-text') || $(this).prev('code').text();
    
    if (navigator.clipboard) {
      navigator.clipboard.writeText(text).then(function() {
        showNotification('Copied to clipboard!', 'success');
      });
    } else {
      // Fallback for older browsers
      var textArea = document.createElement('textarea');
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      showNotification('Copied to clipboard!', 'success');
    }
  });
  
  // Notification system
  function showNotification(message, type) {
    var notification = $('<div class="notification notification-' + type + '">' + message + '</div>');
    $('body').append(notification);
    
    setTimeout(function() {
      notification.addClass('show');
    }, 100);
    
    setTimeout(function() {
      notification.removeClass('show');
      setTimeout(function() {
        notification.remove();
      }, 300);
    }, 3000);
  }
  
  // Form validation
  $('.contact-form').submit(function(e) {
    e.preventDefault();
    
    var form = $(this);
    var name = form.find('input[name="name"]').val();
    var email = form.find('input[name="email"]').val();
    var message = form.find('textarea[name="message"]').val();
    
    // Basic validation
    if (!name || !email || !message) {
      showNotification('Please fill in all fields', 'error');
      return;
    }
    
    if (!isValidEmail(email)) {
      showNotification('Please enter a valid email address', 'error');
      return;
    }
    
    // Simulate form submission
    showNotification('Message sent successfully!', 'success');
    form[0].reset();
  });
  
  function isValidEmail(email) {
    var emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }
  
  // Project filter functionality
  $('.filter-btn').click(function() {
    var filter = $(this).data('filter');
    
    $('.filter-btn').removeClass('active');
    $(this).addClass('active');
    
    if (filter === 'all') {
      $('.project-item').fadeIn();
    } else {
      $('.project-item').hide();
      $('.project-item[data-category="' + filter + '"]').fadeIn();
    }
  });
  
  // Team member card hover effect
  $('.team-member').hover(
    function() {
      $(this).find('.member-overlay').fadeIn(200);
    },
    function() {
      $(this).find('.member-overlay').fadeOut(200);
    }
  );
  
  // Progress bar animation
  function animateProgressBars() {
    $('.progress-bar').each(function() {
      var progressBar = $(this);
      var percentage = progressBar.data('percentage');
      
      progressBar.animate({
        width: percentage + '%'
      }, 1500);
    });
  }
  
  // Trigger progress bar animation when in viewport
  if ('IntersectionObserver' in window) {
    var progressObserver = new IntersectionObserver(function(entries) {
      entries.forEach(function(entry) {
        if (entry.isIntersecting) {
          animateProgressBars();
          progressObserver.unobserve(entry.target);
        }
      });
    });
    
    var progressSection = document.querySelector('.progress-section');
    if (progressSection) {
      progressObserver.observe(progressSection);
    }
  }
  
  // Counter animation
  function animateCounters() {
    $('.counter').each(function() {
      var counter = $(this);
      var target = parseInt(counter.data('target'));
      var current = 0;
      var increment = target / 100;
      
      var timer = setInterval(function() {
        current += increment;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        }
        counter.text(Math.floor(current));
      }, 20);
    });
  }
  
  // Trigger counter animation when in viewport
  if ('IntersectionObserver' in window) {
    var counterObserver = new IntersectionObserver(function(entries) {
      entries.forEach(function(entry) {
        if (entry.isIntersecting) {
          animateCounters();
          counterObserver.unobserve(entry.target);
        }
      });
    });
    
    var statsSection = document.querySelector('.stats-section');
    if (statsSection) {
      counterObserver.observe(statsSection);
    }
  }
  
  // Parallax effect for hero sections
  $(window).scroll(function() {
    var scrolled = $(this).scrollTop();
    var parallax = $('.parallax-bg');
    var speed = 0.5;
    
    parallax.css('transform', 'translateY(' + (scrolled * speed) + 'px)');
  });
  
  // Initialize tooltips
  $('[data-toggle="tooltip"]').each(function() {
    var tooltip = $(this);
    var title = tooltip.attr('title') || tooltip.data('title');
    
    tooltip.hover(
      function(e) {
        var tooltipEl = $('<div class="custom-tooltip">' + title + '</div>');
        $('body').append(tooltipEl);
        
        var offset = tooltip.offset();
        tooltipEl.css({
          top: offset.top - tooltipEl.outerHeight() - 10,
          left: offset.left + (tooltip.outerWidth() / 2) - (tooltipEl.outerWidth() / 2)
        }).fadeIn(200);
      },
      function() {
        $('.custom-tooltip').fadeOut(200, function() {
          $(this).remove();
        });
      }
    );
  });
  
  // Initialize on document ready
  $(document).ready(function() {
    // Add loading animation
    $('body').addClass('loaded');
    
    // Initialize AOS (Animate On Scroll) if available
    if (typeof AOS !== 'undefined') {
      AOS.init({
        duration: 1000,
        once: true
      });
    }
    
    // Initialize syntax highlighting if available
    if (typeof Prism !== 'undefined') {
      Prism.highlightAll();
    }
  });
  
})(jQuery);

// Vanilla JavaScript utilities for non-jQuery dependent features
(function() {
  'use strict';
  
  // Theme switcher
  function initThemeSwitcher() {
    var themeSwitcher = document.querySelector('.theme-switcher');
    if (!themeSwitcher) return;
    
    var currentTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.setAttribute('data-theme', currentTheme);
    
    themeSwitcher.addEventListener('click', function() {
      var newTheme = currentTheme === 'light' ? 'dark' : 'light';
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      currentTheme = newTheme;
    });
  }
  
  // Service worker registration
  function registerServiceWorker() {
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('/sw.js')
        .then(function(registration) {
          console.log('SW registered: ', registration);
        })
        .catch(function(registrationError) {
          console.log('SW registration failed: ', registrationError);
        });
    }
  }
  
  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', function() {
    initThemeSwitcher();
    registerServiceWorker();
  });
  
})();

// Export for module systems
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {};
}